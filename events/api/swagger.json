{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Events"
  },
  "basePath": "/api",
  "tags": [
    {
      "name": "events",
      "description": "The API for creating and maintaining events.\n"
    }
  ],
  "schemes": [
    "http"
  ],
  "securityDefinitions": {
    "ApiKeyAuth": {
      "type": "apiKey",
      "in": "header",
      "name": "x-auth-token"
    }
  },
  "paths": {
    "/event/heartbeat": {
      "get": {
        "tags": [
          "events"
        ],
        "operationId": "heartbeat",
        "summary": "server heartbeat.",
        "description": "Simple health check.",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/heartbeat"
            }
          },
          "500": {
            "description": "Unexpected Error",
            "schema": {
              "$ref": "#/definitions/errors"
            }
          }
        }
      }
    },
    "/event": {
      "get": {
        "tags": [
          "events"
        ],
        "operationId": "search",
        "summary": "Search events based on event name or event type",
        "description": "Get a list of events.\n",
        "parameters": [
          {
            "name": "x-auth-token",
            "in": "header",
            "description": "Access Token for calling the service",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-request-id",
            "in": "header",
            "description": "correlation id, if not provided will be generated by the api",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "eventName",
            "description": "names to search for.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "eventType",
            "description": "type to search for.",
            "type": "string",
            "enum": [
              "party",
              "wineTour",
              "teamBuilding",
              "picnic"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/events"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/errors"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/errors"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/errors"
            }
          },
          "500": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/errors"
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "events"
        ],
        "operationId": "create",
        "summary": "Create a new event.",
        "description": "Create a events record.\n",
        "parameters": [
          {
            "name": "x-auth-token",
            "in": "header",
            "description": "Access Token for calling the service",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-request-id",
            "in": "header",
            "description": "correlation id, if not provided will be generated by the api",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "A JSON object instance.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/eventModel"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/eventResponseModel"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/errors"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/errors"
            }
          },
          "500": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/errors"
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/event/{id}": {
      "get": {
        "tags": [
          "events"
        ],
        "operationId": "retrieve",
        "summary": "Get an existing event.",
        "description": "Retrieve a event.\n",
        "parameters": [
          {
            "name": "x-auth-token",
            "in": "header",
            "description": "Access Token for calling the service",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-request-id",
            "in": "header",
            "description": "correlation id, if not provided will be generated by the api",
            "required": false,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "The id of the event to retrieve.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/eventResponseModel"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/errors"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/errors"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/errors"
            }
          },
          "500": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/errors"
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "events"
        ],
        "operationId": "update",
        "summary": "update an existing event record.",
        "description": "update an exiting event record.\n",
        "parameters": [
          {
            "name": "x-auth-token",
            "in": "header",
            "description": "Access Token for calling the service",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-request-id",
            "in": "header",
            "description": "correlation id, if not provided will be generated by the api",
            "required": false,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "The id of the event to update.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "A JSON object instance.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/eventModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/eventResponseModel"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/errors"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/errors"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/errors"
            }
          },
          "500": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/errors"
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "events"
        ],
        "operationId": "delete",
        "summary": "Delete an existing event record.",
        "description": "Delete event record by id.",
        "parameters": [
          {
            "name": "x-auth-token",
            "in": "header",
            "description": "Access Token for calling the service",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-request-id",
            "in": "header",
            "description": "correlation id, if not provided will be generated by the api",
            "required": false,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "The id of the event to delete.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/errors"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/errors"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/errors"
            }
          },
          "500": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/errors"
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    }
  },
  "definitions": {
    "errors": {
      "type": "object",
      "description": "description of errors",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/error"
          }
        }
      }
    },
    "error": {
      "type": "object"
    },
    "heartbeat": {
      "type": "object",
      "description": "check server status",
      "properties": {
        "message": {
          "type": "string"
        }
      }
    },
    "eventResponseModel": {
      "allOf": [
        {
          "$ref": "#/definitions/eventModel"
        },
        {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique identifier"
            },
            "createdAt": {
              "type": "string",
              "format": "date-time"
            },
            "updatedAt": {
              "type": "string",
              "format": "date-time"
            }
          }
        }
      ]
    },
    "events": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/eventResponseModel"
      }
    },
    "eventModel": {
      "type": "object",
      "properties": {
        "eventName": {
          "type": "string"
        },
        "eventType": {
          "type": "string",
          "enum": [
            "party",
            "wineTour",
            "teamBuilding",
            "picnic"
          ]
        },
        "basePrice": {
          "type": "number"
        }
      },
      "required": [
        "eventName",
        "eventType",
        "basePrice"
      ]
    }
  }
}